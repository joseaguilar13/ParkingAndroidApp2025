// Generated by view binder compiler. Do not edit!
package com.navix.mapboxvainilla.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.navix.mapboxvainilla.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MessageBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnBooking;

  @NonNull
  public final Button btnMessage;

  @NonNull
  public final Button btnProfile;

  @NonNull
  public final Button btnSelectImage;

  @NonNull
  public final EditText edtMessageText;

  @NonNull
  public final Spinner spinnerMessageTo;

  private MessageBinding(@NonNull LinearLayout rootView, @NonNull Button btnBooking,
      @NonNull Button btnMessage, @NonNull Button btnProfile, @NonNull Button btnSelectImage,
      @NonNull EditText edtMessageText, @NonNull Spinner spinnerMessageTo) {
    this.rootView = rootView;
    this.btnBooking = btnBooking;
    this.btnMessage = btnMessage;
    this.btnProfile = btnProfile;
    this.btnSelectImage = btnSelectImage;
    this.edtMessageText = edtMessageText;
    this.spinnerMessageTo = spinnerMessageTo;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MessageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MessageBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.message, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MessageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBooking;
      Button btnBooking = ViewBindings.findChildViewById(rootView, id);
      if (btnBooking == null) {
        break missingId;
      }

      id = R.id.btnMessage;
      Button btnMessage = ViewBindings.findChildViewById(rootView, id);
      if (btnMessage == null) {
        break missingId;
      }

      id = R.id.btnProfile;
      Button btnProfile = ViewBindings.findChildViewById(rootView, id);
      if (btnProfile == null) {
        break missingId;
      }

      id = R.id.btnSelectImage;
      Button btnSelectImage = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectImage == null) {
        break missingId;
      }

      id = R.id.edtMessageText;
      EditText edtMessageText = ViewBindings.findChildViewById(rootView, id);
      if (edtMessageText == null) {
        break missingId;
      }

      id = R.id.spinnerMessageTo;
      Spinner spinnerMessageTo = ViewBindings.findChildViewById(rootView, id);
      if (spinnerMessageTo == null) {
        break missingId;
      }

      return new MessageBinding((LinearLayout) rootView, btnBooking, btnMessage, btnProfile,
          btnSelectImage, edtMessageText, spinnerMessageTo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
